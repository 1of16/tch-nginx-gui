#
#
#	 Custom Gui for Technicolor Modem: utility script and modified gui for the Technicolor Modem
#	 								   interface based on OpenWrt
#
#    Copyright (C) 2018  Christian Marangi <ansuelsmth@gmail.com>
#
#    This file is part of Custom Gui for Technicolor Modem.
#    
#    Custom Gui for Technicolor Modem is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#    
#    Custom Gui for Technicolor Modem is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#    
#    You should have received a copy of the GNU General Public License
#    along with Custom Gui for Technicolor Modem.  If not, see <http://www.gnu.org/licenses/>.
#
#

wanmode=$(uci get -q network.config.wan_mode)
connectivity="yes"
if ping -q -c 1 -W 1 8.8.8.8 >/dev/null; then
  connectivity="yes"
else
  connectivity="no"
fi
base_dir=https://repository.ilpuntotecnico.com/files/Ansuel/AGTEF

if [ $1 ]; then
	if [ $1 == "Schedule" ]; then
		RANDOM=$(awk -v min=1 -v max=3600 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')
		sleep $RANDOM
	fi
fi

if [ "$wanmode" != "bridge" ] && [ $connectivity == "yes" ]; then
	if [ ! $(uci get -q env.var.update_branch) ] ||  [ $(uci get env.var.update_branch) == "stable" ]; then
		update_branch=""
	else
		update_branch="_dev"
	fi
	newer_stable=0
	remote_link=$base_dir'/GUI'$update_branch'.tar.bz2'
	version_link=$base_dir'/version'
	online_md5=$(curl -k -s $remote_link | md5sum | awk '{print $1}')
	local_md5=$(uci get env.var.gui_hash)
	version_file=$(curl -k -s $version_link)
	
	new_version=$(echo "$version_file" | grep $online_md5 | awk '{print $2}' )
	
	if [ "$new_version" != "" ] ; then #cool way to test if we have internet connection
		if [ $update_branch ]; then
			if [ $update_branch == "_dev" ]; then
				stable_link=$base_dir'/GUI.tar.bz2'
				stable_md5=$(curl -k -s $stable_link | md5sum | awk '{print $1}')
				stable_version=$(echo "$version_file" | grep $stable_md5 | awk '{print $2}' )
				if [ $( echo $stable_version | tail -c 3 | grep "." ) ]; then
					stable_version_norm=$stable_version"0"
				else
					stable_version_norm=$stable_version
				fi
				if [ $( echo $stable_version_norm | sed -e 's/\.//g') -gt $( echo $new_version | sed -e 's/\.//g') ]; then
					new_version=$stable_version" STABLE"
				fi
				if [ $local_md5 != $stable_md5 ]; then
					newer_stable=1
				fi
			fi
		fi
		
		if [ "$online_md5" != "$local_md5" ] || [ $newer_stable == 1 ]; then
			uci set env.var.outdated_ver=1
			uci set env.var.new_ver="$new_version"
		else
			uci set env.var.outdated_ver=0
			uci set env.var.new_ver="Unknown"
		fi
	fi
	
	uci commit
	
	/etc/init.d/transformer reload
fi
